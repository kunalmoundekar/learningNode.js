🌟 Note of verstion 🌟

^4.18.2

4 → Major version4
18 → Minor version
2 → Patch version

1rd Part (Frist Part) (4) -    Major version4

2rd Part (Second Part) (18) - Recommeneded Bug Fix

3rd Part (Last Part) (2) - minore fixes latest verstion of express (4.18.2)



🌟 RESTful API 🌟
(SSR)server side rendering
REST → Representational State Transfer
It’s an architecture style for designing web APIs.

A RESTful API is an API that follows the REST principles to let clients (like frontend apps or mobile apps) communicate with a server over HTTP.

🌟 Http Methods
[get ,post , put, patch delete]
get/user - users data read and return data
post/user - handle new user creation
patch/user - update user  


⭐ Express.js is a minimal and flexible Node.js web application {framework} used to build web applications and APIs easily and efficiently.

1. Creating Web Servers
app.get('/', (req, res) => {
    res.send('Hello World!');
});

2. Building RESTful APIs
app.post('/api/users', (req, res) => {
    // create a user
});

3. Handling Requests and Responses
app.get('/user/:id', (req, res) => {
    const userId = req.params.id;
    res.send(`User ID: ${userId}`);
});

4. Middleware Support
Express allows using middlewares to handle tasks like:

Parsing JSON
Logging
Handling authentication

app.use(express.json()); // Parse incoming JSON requests


5. Serving Static Files
You can serve HTML, CSS, images, etc.:
app.use(express.static('public'));

6. Routing
Express allows you to handle multiple routes cleanly:
app.get('/about', ...);
app.post('/login', ...);


🔥 Why Use Express.js?
| Feature              | Benefit                                          |
| -------------------- | ------------------------------------------------ |
| Simple API           | Easy to learn and use                            |
| Fast and Lightweight | Built on Node.js, very performant                |
| Middleware Support   | Add features like authentication, logging        |
| Huge Ecosystem       | Thousands of npm packages work with it           |
| Full Control         | More flexibility than tools like Django or Rails |



React   = rendreding [csr] client side  rendreding



















